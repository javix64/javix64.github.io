{
  "$schema": "https://raw.githubusercontent.com/jsonresume/resume-schema/v1.0.0/schema.json",
  "basics": {
    "name": "Javier Heredia Molero",
    "label": "Desarrollador de Aplicaciones Web y automatizaciones",
    "image": "https://javix64.github.io/public/profile_photo.png",
    "email": "jav1.x64@gmail.com",
    "url": "https://javix64.com",
    "summary": "Como desarrollador full-stack, poseo sólidas habilidades en el desarrollo de aplicaciones web modernas, utilizando tecnologías como React para crear interfaces dinámicas y responsive, Node.js para implementar sistemas robustos en el backend, y técnicas avanzadas de web scraping y automatización para optimizar procesos. Mi experiencia me permite combinar creatividad técnica con un fuerte compromiso hacia la mejora continua, manteniéndome siempre al día con las últimas tendencias del sector. Estoy dedicado a ofrecer soluciones personalizadas que superen las expectativas de los usuarios y maximicen el valor para las empresas.",
    "location": {
      "city": "Granada",
      "postalCode": "18008",
      "countryCode": "ES",
      "region": "Andalucía"
    },
    "profiles": [
      {
        "network": "LinkedIn",
        "username": "Javier H.M.",
        "url": "https://linkedin.com/in/javier-heredia-molero"
      },
      {
        "network": "GitHub",
        "username": "javix64",
        "url": "https://github.com/javix64"
      }
    ]
  },
  "work": [
    {
      "name": "Foxxum GmbH",
      "location": "Kiel, Schleswig-Holstein, Alemania",
      "position": "Desarrollador Full Stack en Departamento Quality Assurance.",
      "url": "https://foxxum.com",
      "startDate": "2021-08-01",
      "endDate": "2023-07-31",
      "summary": "Tarea principal: Desarrollo de 'TestSuite' (herramienta encargada de proporcionar información de compatibilidades y diagnosis de errores) | Otras tareas: comprobar la retrocompatibilidad con versiones anteriores de navegadores en televisiones.  Tests end-to-end para aplicaciones TV propias y de terceros. Ayudar y guiar a clientes para solucionar bugs.",
      "highlights": [
        "Obtener información y propiedades de cada TV.",
        "Realizar pruebas de funcionalidad con DRM (WideVine y PlayReady).",
        "Analizar métodos GET, POST, PUT, DELETE en solicitudes y respuestas.",
        "Implementación de: hlsjs, dashjs, videojs, shaka y html5 video nativo.",
        "Adaptación de tests end to end con TestCafe para televisores.",
        "Proporcionar información y comentarios técnicos para ayudar a los creadores de aplicaciones a desarrollar aplicaciones fluidas y sin bugs."
      ]
    },
    {
      "name": "Foxxum GmbH",
      "position": "Prácticas de desarrollador Erasmus",
      "startDate": "2021-03-31",
      "endDate": "2021-06-30",
      "highlights": [
        "Comparación de herramientas end to end testing: Cypress y TestCafe. Para comprobar la viabilidad de estas herramientas con televisores.",
        "Desarrollar una aplicación de música (SoundCloud) para TV con React.",
        "Realizar una aplicación para un periódico (EuropaPress) con React."
      ],
      "summary": "Aprendí como utilizar React y como solventar problemas de compatibilidad con televisiones",
      "url": "https://foxxum.com",
      "location": "Kiel, Schleswig-Holstein, Alemania"
    }
  ],
  "education": [
    {
      "institution": "IES FRANCISCO AYALA",
      "url": "https://iesayala.com/",
      "area": "Desarrollo de aplicaciones web",
      "studyType": "Certificado Técnico Superior (CFGS)",
      "startDate": "2019",
      "endDate": "2021",
      "score": "--",
      "courses": [
        "Linux",
        "MySQL",
        "Java",
        "HTML/CSS",
        "Javascript",
        "NodeJS",
        "CI - CD",
        "SASS/SCSS",
        "Proyecto Final - End to end testing: Cypress VS TestCafe"
      ]
    }
  ],
  "skills": [
    {
      "name": "Desarrollador front-end",
      "level": "Advanced",
      "keywords": [
        "HTML - CSS",
        "SCSS/SASS",
        "Javascript",
        "ReactJS",
        "Redux.js",
        "Bootstrap",
        "Material Design",
        "WebPack",
        "Vite",
        "Babel",
        "Figma"
      ]
    },
    {
      "name": "Desarrollador de back-end",
      "level": "Intermediate",
      "keywords": [
        "Node.js",
        "Restful API's",
        "Playwright-chromium",
        "pm2",
        "expressJS",
        "koaJS",
        "MongoDB",
        "MySQL/ MariaDB/ PostgreSQL",
        "sqlite3"
      ]
    },
    {
      "name": "Habilidades blandas",
      "level": "Master",
      "keywords": [
        "Motivar a las personas a hacer lo mejor que puedan",
        "Buen comunicador",
        "Autodidacta",
        "Pensamiento crítico",
        "Entusiasta",
        "Leal",
        "Con iniciativa"
      ]
    },
    {
      "name": "Otras habilidades",
      "level": "Intermediate",
      "keywords": [
        "WordPress",
        "Strapi",
        "Linux/Bash",
        "NFC",
        "Arduino",
        "Raspberry",
        "Electrónica básica / Soldadura",
        "GIT",
        "Docker"
      ]
    }
  ],
  "languages": [
    { "language": "Español", "fluency": "Native speaker" },
    { "language": "Inglés","fluency": "Intermediate" },
    { "language": "Alemán", "fluency": "Beginner" }
  ],
  "interests": [
    { "name": "Microcontroladores" },
    { "name": "Electrónica" },
    { "name": "Impresión 3D" },
    { "name": "Automatización de procesos" },
    { "name": "Seguridad informática" },
    { "name": "Desarrollo de software open source" },
    { "name": "Optimización de rendimiento web" }
  ],
  "projects": [
    {
      "name": "(Privado) Traductor de whatsapp",
      "description": "Todavía en progreso. Cuando vivía en Alemania tenía varios grupos de amigos alemanes y para evitar copiar y pegar al traductor cada vez que escribían un mensaje, se me ocurrió la idea de crear un traductor para WhatsApp. Utilicé whatsapp-web.js para el bot y Playwright para traducirlo despues con  DeepL.",
      "keywords": ["whatsapp-web.js", "Playwright-Chromium", "pm2"],
      "startDate": "2023-06-10",
      "endDate": "2023-10-31",
      "url": "https://github.com/javix64",
      "type": "application"
    },
    {
      "name": "Wg-Gesucht-post",
      "description": "Decidí crear una herramienta que me permitiera enviar mensajes de forma masiva para todos los anuncios/ofertas de apartamentos. Contiene dos partes: frontend/backend. El frontend está hecho en React.js y el backend está hecho en Koa",
      "keywords": ["Koa", "Playwright-chromium", "react", "formik", "axios"],
      "startDate": "2023-09-04",
      "endDate": "2023-10-31",
      "url": "https://github.com/javix64/wg-gesucht-post",
      "type": "application"
    },
    {
      "name": "(Privado) Scraping de cómics + Publicación mediante la API de WooCommerce en el sitio web de mi cliente",
      "description": "Un cliente quería obtener los datos de los cómics en un sitio web al mayorista para después publicarlos en su sitio web a través de la API de WooCommerce.",
      "keywords": ["Koa", "Playwright-chromium", "react", "formik", "axios"],
      "startDate": "2022-04-17",
      "endDate": "2023-07-27",
      "url": "https://github.com/javix64",
      "type": "application"
    },
    {
      "name": "(Privado) G2 PDF Evolución",
      "description": "Un compañero y yo decidimos hacer una aplicación para generar pdf a través de una web y un bot de telegram.",
      "keywords": [
        "axios",
        "express",
        "node-cron",
        "node-telegram-bot-api",
        "pdf-lib"
      ],
      "startDate": "2021-12-07",
      "endDate": "2021-12-21",
      "url": "https://github.com/javix64",
      "type": "application"
    }
  ],
  "references": [],
  "awards": [],
  "certificates": [],
  "publications": [],
  "volunteer": [],
  "meta": {
    "canonical": "https://raw.githubusercontent.com/jsonresume/resume-schema/master/resume.json",
    "version": "v1.0.0",
    "lastModified": "2023-09-21T12:55:00"
  }
}
